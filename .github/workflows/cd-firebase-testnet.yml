name: CD Firebase Testnet

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  web-angular-test:
    name: Web Angular Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
      - run: npm ci
      - run: npm run test:web:ci

  web-angular-e2e:
    name: Web Angular E2E
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]
        containers: [1, 2]

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            functions/package-lock.json

      - name: Create environment file's directory
        run: mkdir -p ./projects/web/src/environments
      - name: Create empty environment file
        run: touch ./projects/web/src/environments/environment.ts
      - name: Create empty environment file for development
        run: touch ./projects/web/src/environments/environment.development.ts
      - name: Restore environment file content from Repository secrets
        env:
          ANGULAR_WEB_ENVIRONMENT: ${{ secrets.ANGULAR_WEB_ENVIRONMENT_TESTNET_DEV }}
        run: echo $ANGULAR_WEB_ENVIRONMENT | base64 --decode --ignore-garbage > ./projects/web/src/environments/environment.development.ts

      - run: npm ci
      - run: npm ci
        working-directory: ./functions

      - name: Create emulator data directory
        run: mkdir -p functions/emulator/
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: projects/46488998501/locations/global/workloadIdentityPools/github-actions/providers/github
          service_account: github-actions-service-account@symbol-social-wallet-test.iam.gserviceaccount.com
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm run start:web, npm --prefix ./functions run build:watch, npm --prefix ./functions run emulate
          wait-on: 'http://localhost:4200, http://localhost:4000'
          record: true
          parallel: true
          config-file: ./projects/web/cypress.config.ts
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: rm ./projects/web/src/environments/environment.development.ts

  admin-angular-test:
    name: Admin Angular Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
      - run: npm ci
      - run: npm run test:admin:ci

  admin-angular-e2e:
    name: Admin Angular E2E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
      - run: npm ci
      - run: npm run e2e:admin:ci

  lp-angular-test:
    name: LP Angular Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
      - run: npm ci
      - run: npm run test:lp:ci

  lp-angular-e2e:
    name: LP Angular E2E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
      - run: npm ci
      - run: npm run e2e:lp:ci

  firebase-functions-test:
    name: Firebase Functions Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            ./functions/package-lock.json
      - run: npm ci
        working-directory: ./functions
      - run: npm run test
        working-directory: ./functions

  deploy-testnet:
    name: Deploy Firebase Testnet
    needs:
      - web-angular-test
      - web-angular-e2e
      - admin-angular-test
      - admin-angular-e2e
      - lp-angular-test
      - lp-angular-e2e
      - firebase-functions-test
    runs-on: ubuntu-latest
    environment:
      name: testnet
    strategy:
      matrix:
        node-version: [16.x]
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            ./functions/package-lock.json

      - name: Create environment file's directory
        run: mkdir -p ./projects/web/src/environments
      - name: Create empty environment file
        run: touch ./projects/web/src/environments/environment.ts
      - name: Create empty environment file for production
        run: touch ./projects/web/src/environments/environment.production.ts
      - name: Restore environment file content from Environment secrets
        env:
          ANGULAR_WEB_ENVIRONMENT: ${{ secrets.ANGULAR_WEB_ENVIRONMENT }}
        run: echo $ANGULAR_WEB_ENVIRONMENT | base64 --decode --ignore-garbage > ./projects/web/src/environments/environment.production.ts

      - run: npm ci
      - run: npm run build:web
      - run: npm run build:admin
      - run: npm run build:lp
      - run: rm ./projects/web/src/environments/environment.production.ts
      - run: npm ci
        working-directory: ./functions
      - run: npm run build
        working-directory: ./functions
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: projects/46488998501/locations/global/workloadIdentityPools/github-actions/providers/github
          service_account: github-actions-service-account@symbol-social-wallet-test.iam.gserviceaccount.com
      - run: npx firebase deploy --project=testnet --force --debug
